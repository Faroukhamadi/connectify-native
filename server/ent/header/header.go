// Code generated by entc, DO NOT EDIT.

package header

const (
	// Label holds the string label denoting the header type in the database.
	Label = "header"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldReceiverId holds the string denoting the receiverid field in the database.
	FieldReceiverId = "receiver_id"
	// FieldSenderId holds the string denoting the senderid field in the database.
	FieldSenderId = "sender_id"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldMessageId holds the string denoting the messageid field in the database.
	FieldMessageId = "message_id"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeMessage holds the string denoting the message edge name in mutations.
	EdgeMessage = "message"
	// Table holds the table name of the header in the database.
	Table = "header"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "header"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "user"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "receiver_id"
	// MessageTable is the table that holds the message relation/edge.
	MessageTable = "message"
	// MessageInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessageInverseTable = "message"
	// MessageColumn is the table column denoting the message relation/edge.
	MessageColumn = "header_id"
)

// Columns holds all SQL columns for header fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldReceiverId,
	FieldSenderId,
	FieldCreatedAt,
	FieldMessageId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// EdgeChildUsers holds the string denoting the child_users edge name in mutations.
	EdgeChildUsers = "child_users"
	// EdgeParentUsers holds the string denoting the parent_users edge name in mutations.
	EdgeParentUsers = "parent_users"
	// EdgeHeaders holds the string denoting the headers edge name in mutations.
	EdgeHeaders = "headers"
	// Table holds the table name of the user in the database.
	Table = "user"
	// ChildUsersTable is the table that holds the child_users relation/edge. The primary key declared below.
	ChildUsersTable = "user_child_users"
	// ParentUsersTable is the table that holds the parent_users relation/edge. The primary key declared below.
	ParentUsersTable = "user_child_users"
	// HeadersTable is the table that holds the headers relation/edge.
	HeadersTable = "header"
	// HeadersInverseTable is the table name for the Header entity.
	// It exists in this package in order to avoid circular dependency with the "header" package.
	HeadersInverseTable = "header"
	// HeadersColumn is the table column denoting the headers relation/edge.
	HeadersColumn = "receiver_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldPassword,
	FieldFirstName,
	FieldLastName,
}

var (
	// ChildUsersPrimaryKey and ChildUsersColumn2 are the table columns denoting the
	// primary key for the child_users relation (M2M).
	ChildUsersPrimaryKey = []string{"user_id", "parent_user_id"}
	// ParentUsersPrimaryKey and ParentUsersColumn2 are the table columns denoting the
	// primary key for the parent_users relation (M2M).
	ParentUsersPrimaryKey = []string{"user_id", "parent_user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

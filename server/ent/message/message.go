// Code generated by entc, DO NOT EDIT.

package message

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHeaderID holds the string denoting the header_id field in the database.
	FieldHeaderID = "header_id"
	// FieldIsFromSender holds the string denoting the is_from_sender field in the database.
	FieldIsFromSender = "is_from_sender"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldRead holds the string denoting the read field in the database.
	FieldRead = "read"
	// FieldSentAt holds the string denoting the sent_at field in the database.
	FieldSentAt = "sent_at"
	// EdgeHeader holds the string denoting the header edge name in mutations.
	EdgeHeader = "header"
	// Table holds the table name of the message in the database.
	Table = "message"
	// HeaderTable is the table that holds the header relation/edge.
	HeaderTable = "message"
	// HeaderInverseTable is the table name for the Header entity.
	// It exists in this package in order to avoid circular dependency with the "header" package.
	HeaderInverseTable = "header"
	// HeaderColumn is the table column denoting the header relation/edge.
	HeaderColumn = "header_id"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldHeaderID,
	FieldIsFromSender,
	FieldContent,
	FieldRead,
	FieldSentAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
